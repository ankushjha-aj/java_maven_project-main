# name: Java Maven Build & Publish to DockerHub

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build_test:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn clean package

#   build-and-push-to-docker-hub:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           registry: docker.io # Optional, good practice to be explicit
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}

#       - name: Build the Docker image
#         run:  docker build ./ -t ${{ secrets.DOCKERHUB_USERNAME }}/java-maven-test2:latest

#       - name: Push the Docker image
#         run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/java-maven-test-2:latest

name: Java Maven Build & Publish to DockerHub

on:
  push:
    branches: [ "main" ] # Trigger on pushes to the main branch
  pull_request:
    branches: [ "main" ]  # Trigger on pull requests to the main branch

jobs:
  build_and_test:  # Combined build and test for efficiency
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # Fetch the code
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven' # Cache Maven dependencies for faster builds
      - name: Build and Test with Maven
        run: mvn clean package -B  # Build with batch mode for concise output, 
                                    # Consider adding mvn test if you have tests

  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build_and_test # Ensure the build and test step passes first
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io # Optional, good practice to be explicit
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build the Docker image
        run: | 
          docker build \
            --file ./Dockerfile \  # Specify the Dockerfile explicitly
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/java-maven-test2:latest \
            .                      # Build context is the current directory
  
      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/java-maven-test2:latest
